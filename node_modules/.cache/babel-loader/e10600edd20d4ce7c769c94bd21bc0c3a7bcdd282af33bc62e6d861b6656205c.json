{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/showcase/showcase.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport { Observer } from 'gsap/Observer';\nimport { Link, Outlet } from \"react-router-dom\";\n//components\nimport Location from '../../components/location.react';\nimport Instruction from '../../components/instruction.react';\n//styles\nimport '../../styles/home.css';\nimport '../../styles/showcase.css';\n//assets\nimport { Media } from \"../../media/media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = () => {\n  _s();\n  //state\n  const [enabled, setEnabled] = useState(false);\n  //refs\n  let showcaseContainer = useRef(null);\n  let showcaseContent = useRef(HTMLElement);\n  let showcaseHeader = useRef(HTMLElement);\n  let showcaseCarouselContainer = useRef(HTMLElement);\n  let showcaseCarouselCards = useRef(HTMLElement);\n  let showcaseCarouselDragProxy = useRef(null);\n\n  //plugins\n  gsap.registerPlugin(SplitText, Draggable, ScrollTrigger, ScrollSmoother);\n\n  //carousel default timeline\n  function horizontalLoop(items, config) {\n    items = gsap.utils.toArray(items);\n    config = config || {};\n    let tl = gsap.timeline({\n        repeat: config.repeat,\n        paused: config.paused,\n        defaults: {\n          ease: \"none\"\n        },\n        onReverseComplete: () => tl.totalTime(tl.rawTime() + tl.duration() * 100)\n      }),\n      length = items.length,\n      startX = items[0].offsetLeft,\n      times = [],\n      widths = [],\n      xPercents = [],\n      curIndex = 0,\n      pixelsPerSecond = (config.speed || 1) * 50,\n      snap = config.snap === false ? v => v : gsap.utils.snap(config.snap || 1),\n      // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural\n      totalWidth,\n      curX,\n      distanceToStart,\n      distanceToLoop,\n      item,\n      i;\n    gsap.set(items, {\n      // convert \"x\" to \"xPercent\" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.\n      xPercent: (i, el) => {\n        let w = widths[i] = parseFloat(gsap.getProperty(el, \"width\", \"px\"));\n        xPercents[i] = snap(parseFloat(gsap.getProperty(el, \"x\", \"px\")) / w * 100 + gsap.getProperty(el, \"xPercent\"));\n        return xPercents[i];\n      }\n    });\n    gsap.set(items, {\n      x: 0\n    });\n    totalWidth = items[length - 1].offsetLeft + xPercents[length - 1] / 100 * widths[length - 1] - startX + items[length - 1].offsetWidth * gsap.getProperty(items[length - 1], \"scaleX\") + (parseFloat(config.paddingRight) || 0);\n    for (i = 0; i < length; i++) {\n      item = items[i];\n      curX = xPercents[i] / 100 * widths[i];\n      distanceToStart = item.offsetLeft + curX - startX;\n      distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, \"scaleX\");\n      tl.to(item, {\n        xPercent: snap((curX - distanceToLoop) / widths[i] * 100),\n        duration: distanceToLoop / pixelsPerSecond\n      }, 0).fromTo(item, {\n        xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100)\n      }, {\n        xPercent: xPercents[i],\n        duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,\n        immediateRender: false\n      }, distanceToLoop / pixelsPerSecond).add(\"label\" + i, distanceToStart / pixelsPerSecond);\n      times[i] = distanceToStart / pixelsPerSecond;\n    }\n    function toIndex(index, vars) {\n      vars = vars || {};\n      Math.abs(index - curIndex) > length / 2 && (index += index > curIndex ? -length : length); // always go in the shortest direction\n      let newIndex = gsap.utils.wrap(0, length, index),\n        time = times[newIndex];\n      if (time > tl.time() !== index > curIndex) {\n        // if we're wrapping the timeline's playhead, make the proper adjustments\n        vars.modifiers = {\n          time: gsap.utils.wrap(0, tl.duration())\n        };\n        time += tl.duration() * (index > curIndex ? 1 : -1);\n      }\n      curIndex = newIndex;\n      vars.overwrite = true;\n      return tl.tweenTo(time, vars);\n    }\n    tl.next = vars => toIndex(curIndex + 1, vars);\n    tl.previous = vars => toIndex(curIndex - 1, vars);\n    tl.current = () => curIndex;\n    tl.toIndex = (index, vars) => toIndex(index, vars);\n    tl.times = times;\n    tl.progress(1, true).progress(0, true); // pre-render for performance\n    if (config.reversed) {\n      tl.vars.onReverseComplete();\n      tl.reverse();\n    }\n    return tl;\n  }\n  useLayoutEffect(() => {\n    const scrollingCards = gsap.utils.toArray(showcaseCarouselCards.children);\n    //gsap context\n    const ctx = gsap.context(() => {\n      //carousel default \n      const horizontalLoopTL = horizontalLoop(scrollingCards, {\n        repeat: -1\n      });\n\n      //observer\n      Observer.create({\n        onChangeY(self) {\n          let factor = 8;\n          if (self.deltaY < 0) {\n            factor *= -1;\n          }\n          gsap.timeline({\n            defaults: {\n              ease: \"ease\"\n            }\n          }).to(horizontalLoopTL, {\n            timeScale: factor * 2.5,\n            duration: 0.2\n          }).to(horizontalLoopTL, {\n            timeScale: factor / 8,\n            duration: 0.2\n          });\n        }\n      });\n      const carouselTL = gsap.timeline();\n      carouselTL.fromTo(scrollingCards, {\n        opacity: 0,\n        y: 100\n      }, {\n        y: 0,\n        opacity: 1,\n        ease: 'ease',\n        duration: 1,\n        stagger: 0.11\n      });\n    });\n    return () => {\n      ctx.revert();\n      console.log(ctx);\n    };\n  }, []);\n\n  //parallax animation\n  // const mouseAnimation = (event) => {\n  //     const scrollingCards = gsap.utils.toArray(showcaseCarouselCards.children);\n  //     let xPos = event.clientX / window.innerWidth - 0.5,\n  //         yPos = event.clientY / window.innerHeight - 0.5;\n  //     const parallaxTL = gsap.timeline();\n\n  //     if (scrollingCards) {\n  //         parallaxTL.to(scrollingCards, {\n  //             duration: 0.5,\n  //             rotationY: xPos * 10,\n  //             rotationX: yPos * -25,\n  //             rotate: xPos * 5,\n  //         }, 0)\n  //     }\n  // }\n\n  // //parallax trigger\n  // useEffect(() => {\n  //     const handleMouseMove = (event) => {\n  //         if (!enabled) return;\n  //         mouseAnimation(event);\n  //     };\n  //     window.addEventListener('mousemove', (event) => handleMouseMove(event));\n  //     return () => {\n  //         window.removeEventListener('mousemove', (event) => handleMouseMove(event));\n  //     }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"showcase\",\n    className: \"showcase\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(Showcase, \"7F1RvsL2DqksgOGXUOKqCwD1IY4=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","gsap","SplitText","Draggable","ScrollTrigger","ScrollSmoother","Observer","Link","Outlet","Location","Instruction","Media","jsxDEV","_jsxDEV","Showcase","_s","enabled","setEnabled","showcaseContainer","showcaseContent","HTMLElement","showcaseHeader","showcaseCarouselContainer","showcaseCarouselCards","showcaseCarouselDragProxy","registerPlugin","horizontalLoop","items","config","utils","toArray","tl","timeline","repeat","paused","defaults","ease","onReverseComplete","totalTime","rawTime","duration","length","startX","offsetLeft","times","widths","xPercents","curIndex","pixelsPerSecond","speed","snap","v","totalWidth","curX","distanceToStart","distanceToLoop","item","i","set","xPercent","el","w","parseFloat","getProperty","x","offsetWidth","paddingRight","to","fromTo","immediateRender","add","toIndex","index","vars","Math","abs","newIndex","wrap","time","modifiers","overwrite","tweenTo","next","previous","current","progress","reversed","reverse","scrollingCards","children","ctx","context","horizontalLoopTL","create","onChangeY","self","factor","deltaY","timeScale","carouselTL","opacity","y","stagger","revert","console","log","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/showcase/showcase.js"],"sourcesContent":["import { React, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport { Observer } from 'gsap/Observer';\nimport {\n    Link,\n    Outlet,\n} from \"react-router-dom\"\n//components\nimport Location from '../../components/location.react';\nimport Instruction from '../../components/instruction.react';\n//styles\nimport '../../styles/home.css';\nimport '../../styles/showcase.css';\n//assets\nimport { Media } from \"../../media/media\";\n\nconst Showcase = () => {\n    //state\n    const [enabled, setEnabled] = useState(false);\n    //refs\n    let showcaseContainer = useRef(null);\n    let showcaseContent = useRef(HTMLElement);\n    let showcaseHeader = useRef(HTMLElement);\n    let showcaseCarouselContainer = useRef(HTMLElement);\n    let showcaseCarouselCards = useRef(HTMLElement);\n    let showcaseCarouselDragProxy = useRef(null);\n\n    //plugins\n    gsap.registerPlugin(SplitText, Draggable, ScrollTrigger, ScrollSmoother);\n\n\n    //carousel default timeline\n    function horizontalLoop(items, config) {\n        items = gsap.utils.toArray(items);\n        config = config || {};\n        let tl = gsap.timeline({ repeat: config.repeat, paused: config.paused, defaults: { ease: \"none\" }, onReverseComplete: () => tl.totalTime(tl.rawTime() + tl.duration() * 100) }),\n            length = items.length,\n            startX = items[0].offsetLeft,\n            times = [],\n            widths = [],\n            xPercents = [],\n            curIndex = 0,\n            pixelsPerSecond = (config.speed || 1) * 50,\n            snap = config.snap === false ? v => v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural\n            totalWidth, curX, distanceToStart, distanceToLoop, item, i;\n        gsap.set(items, { // convert \"x\" to \"xPercent\" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.\n            xPercent: (i, el) => {\n                let w = widths[i] = parseFloat(gsap.getProperty(el, \"width\", \"px\"));\n                xPercents[i] = snap(parseFloat(gsap.getProperty(el, \"x\", \"px\")) / w * 100 + gsap.getProperty(el, \"xPercent\"));\n                return xPercents[i];\n            }\n        });\n        gsap.set(items, { x: 0 });\n        totalWidth = items[length - 1].offsetLeft + xPercents[length - 1] / 100 * widths[length - 1] - startX + items[length - 1].offsetWidth * gsap.getProperty(items[length - 1], \"scaleX\") + (parseFloat(config.paddingRight) || 0);\n        for (i = 0; i < length; i++) {\n            item = items[i];\n            curX = xPercents[i] / 100 * widths[i];\n            distanceToStart = item.offsetLeft + curX - startX;\n            distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, \"scaleX\");\n            tl.to(item, { xPercent: snap((curX - distanceToLoop) / widths[i] * 100), duration: distanceToLoop / pixelsPerSecond }, 0)\n                .fromTo(item, { xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100) }, { xPercent: xPercents[i], duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond, immediateRender: false }, distanceToLoop / pixelsPerSecond)\n                .add(\"label\" + i, distanceToStart / pixelsPerSecond);\n            times[i] = distanceToStart / pixelsPerSecond;\n        }\n        function toIndex(index, vars) {\n            vars = vars || {};\n            (Math.abs(index - curIndex) > length / 2) && (index += index > curIndex ? -length : length); // always go in the shortest direction\n            let newIndex = gsap.utils.wrap(0, length, index),\n                time = times[newIndex];\n            if (time > tl.time() !== index > curIndex) { // if we're wrapping the timeline's playhead, make the proper adjustments\n                vars.modifiers = { time: gsap.utils.wrap(0, tl.duration()) };\n                time += tl.duration() * (index > curIndex ? 1 : -1);\n            }\n            curIndex = newIndex;\n            vars.overwrite = true;\n            return tl.tweenTo(time, vars);\n        }\n        tl.next = vars => toIndex(curIndex + 1, vars);\n        tl.previous = vars => toIndex(curIndex - 1, vars);\n        tl.current = () => curIndex;\n        tl.toIndex = (index, vars) => toIndex(index, vars);\n        tl.times = times;\n        tl.progress(1, true).progress(0, true); // pre-render for performance\n        if (config.reversed) {\n            tl.vars.onReverseComplete();\n            tl.reverse();\n        }\n        return tl;\n    }\n\n    useLayoutEffect(() => {\n        const scrollingCards = gsap.utils.toArray(showcaseCarouselCards.children);\n        //gsap context\n        const ctx = gsap.context(() => {\n\n\n            //carousel default \n            const horizontalLoopTL = horizontalLoop(scrollingCards, {\n                repeat: -1,\n            });\n\n            //observer\n            Observer.create({\n                onChangeY(self) {\n                    let factor = 8;\n                    if (self.deltaY < 0) {\n                        factor *= -1;\n                    }\n                    gsap.timeline({\n                        defaults: {\n                            ease: \"ease\",\n                        }\n                    })\n                        .to(horizontalLoopTL, { timeScale: factor * 2.5, duration: 0.2 })\n                        .to(horizontalLoopTL, { timeScale: factor / 8, duration: 0.2 });\n                },\n            });\n\n            const carouselTL = gsap.timeline();\n            carouselTL.fromTo(scrollingCards,\n                {\n                    opacity: 0,\n                    y: 100,\n                },\n                {\n                    y: 0,\n                    opacity: 1,\n                    ease: 'ease',\n                    duration: 1,\n                    stagger: 0.11,\n                })\n\n\n\n\n\n\n\n\n        })\n\n        return () => { ctx.revert(); console.log(ctx) }\n\n    }, []);\n\n\n    //parallax animation\n    // const mouseAnimation = (event) => {\n    //     const scrollingCards = gsap.utils.toArray(showcaseCarouselCards.children);\n    //     let xPos = event.clientX / window.innerWidth - 0.5,\n    //         yPos = event.clientY / window.innerHeight - 0.5;\n    //     const parallaxTL = gsap.timeline();\n\n    //     if (scrollingCards) {\n    //         parallaxTL.to(scrollingCards, {\n    //             duration: 0.5,\n    //             rotationY: xPos * 10,\n    //             rotationX: yPos * -25,\n    //             rotate: xPos * 5,\n    //         }, 0)\n    //     }\n    // }\n\n    // //parallax trigger\n    // useEffect(() => {\n    //     const handleMouseMove = (event) => {\n    //         if (!enabled) return;\n    //         mouseAnimation(event);\n    //     };\n    //     window.addEventListener('mousemove', (event) => handleMouseMove(event));\n    //     return () => {\n    //         window.removeEventListener('mousemove', (event) => handleMouseMove(event));\n    //     }\n    // });\n\n\n\n    return (\n        <div id=\"showcase\" className='showcase'>\n\n\n        </div >\n\n    );\n}\n\nexport default Showcase;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}