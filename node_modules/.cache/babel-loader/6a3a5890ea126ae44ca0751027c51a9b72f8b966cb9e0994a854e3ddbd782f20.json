{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nconst HomeTransitionEnter = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  const header = node.querySelectorAll('.header');\n  const video = node.querySelectorAll('.home-video-content');\n  const tl = gsap.timeline(),\n    mySplitText = new SplitText(header, {\n      type: \"chars\"\n    }),\n    chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.from(chars, {\n    duration: 0.4,\n    opacity: 0,\n    y: 100,\n    ease: \"ease\",\n    stagger: 0.05\n  });\n  tl.from(video, {\n    duration: 0.4,\n    delay: -0.3,\n    opacity: 0,\n    y: 100,\n    ease: \"ease\"\n  });\n};\n_c = HomeTransitionEnter;\nconst HomeTransitionExit = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  const header = node.querySelectorAll('.header');\n  const video = node.querySelectorAll('.home-video-content');\n  const tl = gsap.timeline(),\n    mySplitText = new SplitText(header, {\n      type: \"chars\"\n    }),\n    chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.to(video, {\n    duration: 0.8,\n    width: 300,\n    ease: \"ease\"\n  }, 0);\n  tl.to(chars, {\n    duration: 0.4,\n    opacity: 0,\n    y: -100,\n    ease: \"ease\",\n    stagger: 0.05\n  }, 0);\n  tl.to(video, {\n    duration: 0.4,\n    opacity: 0,\n    ease: \"ease\"\n  });\n};\n_c2 = HomeTransitionExit;\nexport { HomeTransitionEnter, HomeTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"HomeTransitionEnter\");\n$RefreshReg$(_c2, \"HomeTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","HomeTransitionEnter","node","registerPlugin","header","querySelectorAll","video","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","ease","stagger","delay","_c","HomeTransitionExit","to","width","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/home/homeTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n\nconst HomeTransitionEnter = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    const header = node.querySelectorAll('.header');\n    const video = node.querySelectorAll('.home-video-content');\n    const tl = gsap.timeline(),\n        mySplitText = new SplitText(header, { type: \"chars\" }),\n        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n        duration: 0.4,\n        opacity: 0,\n        y: 100,\n        ease: \"ease\",\n        stagger: 0.05\n    });\n    tl.from(video, {\n        duration: 0.4,\n        delay: -0.3,\n        opacity: 0,\n        y: 100,\n        ease: \"ease\",\n    });\n}\n\nconst HomeTransitionExit = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    const header = node.querySelectorAll('.header');\n    const video = node.querySelectorAll('.home-video-content');\n    const tl = gsap.timeline(),\n        mySplitText = new SplitText(header, { type: \"chars\" }),\n        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.to(video, {\n        duration: 0.8,\n        width: 300,\n        ease: \"ease\",\n    }, 0);\n    tl.to(chars, {\n        duration: 0.4,\n        opacity: 0,\n        y: -100,\n        ease: \"ease\",\n        stagger: 0.05\n    }, 0);\n    tl.to(video, {\n        duration: 0.4,\n        opacity: 0,\n        ease: \"ease\",\n    });\n}\n\nexport { HomeTransitionEnter, HomeTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACtCH,IAAI,CAACI,cAAc,CAACH,SAAS,CAAC;EAC9B,MAAMI,MAAM,GAAGF,IAAI,CAACG,gBAAgB,CAAC,SAAS,CAAC;EAC/C,MAAMC,KAAK,GAAGJ,IAAI,CAACG,gBAAgB,CAAC,qBAAqB,CAAC;EAC1D,MAAME,EAAE,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC;IACtBC,WAAW,GAAG,IAAIT,SAAS,CAACI,MAAM,EAAE;MAAEM,IAAI,EAAE;IAAQ,CAAC,CAAC;IACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;EAE/BJ,EAAE,CAACK,IAAI,CAACD,KAAK,EAAE;IACXE,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,GAAG;IACNC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,CAAC;EACFV,EAAE,CAACK,IAAI,CAACN,KAAK,EAAE;IACXO,QAAQ,EAAE,GAAG;IACbK,KAAK,EAAE,CAAC,GAAG;IACXJ,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,GAAG;IACNC,IAAI,EAAE;EACV,CAAC,CAAC;AACN,CAAC;AAAAG,EAAA,GAtBKlB,mBAAmB;AAwBzB,MAAMmB,kBAAkB,GAAGA,CAAC;EAAElB;AAAK,CAAC,KAAK;EACrCH,IAAI,CAACI,cAAc,CAACH,SAAS,CAAC;EAC9B,MAAMI,MAAM,GAAGF,IAAI,CAACG,gBAAgB,CAAC,SAAS,CAAC;EAC/C,MAAMC,KAAK,GAAGJ,IAAI,CAACG,gBAAgB,CAAC,qBAAqB,CAAC;EAC1D,MAAME,EAAE,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC;IACtBC,WAAW,GAAG,IAAIT,SAAS,CAACI,MAAM,EAAE;MAAEM,IAAI,EAAE;IAAQ,CAAC,CAAC;IACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;EAE/BJ,EAAE,CAACc,EAAE,CAACf,KAAK,EAAE;IACTO,QAAQ,EAAE,GAAG;IACbS,KAAK,EAAE,GAAG;IACVN,IAAI,EAAE;EACV,CAAC,EAAE,CAAC,CAAC;EACLT,EAAE,CAACc,EAAE,CAACV,KAAK,EAAE;IACTE,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,CAAC,GAAG;IACPC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,EAAE,CAAC,CAAC;EACLV,EAAE,CAACc,EAAE,CAACf,KAAK,EAAE;IACTO,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVE,IAAI,EAAE;EACV,CAAC,CAAC;AACN,CAAC;AAAAO,GAAA,GAzBKH,kBAAkB;AA2BxB,SAASnB,mBAAmB,EAAEmB,kBAAkB;AAAG,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}