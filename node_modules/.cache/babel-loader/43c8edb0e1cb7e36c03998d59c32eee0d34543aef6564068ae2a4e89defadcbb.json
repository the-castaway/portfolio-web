{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/link.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Link = () => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  let linkButton = useRef(null);\n  let linkButtonBorder = useRef(null);\n  let linkButtonText = useRef(null);\n  let linkButtonIcon = useRef(null);\n  useEffect(() => {\n    const linkTL = gsap.timeline();\n    // parentDiv.addEventListener('mouseenter', () => { linkTL.play() })\n    // parentDiv.addEventListener('mouseleave', () => { linkTL.reverse() })\n  });\n\n  // onClick = {() => { toggleModal(); }}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => linkButton = el,\n    className: \"nav-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonBorder = el,\n      className: \"nav-button-border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonText = el,\n      className: \"nav-button-text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonIcon = el,\n      className: \"nav-button-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-button-icon-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Link, \"Gl6XXge+nFQyFS/SmTQZ2G4f5PM=\");\n_c = Link;\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","jsxDEV","_jsxDEV","Link","_s","registerPlugin","linkButton","linkButtonBorder","linkButtonText","linkButtonIcon","linkTL","timeline","ref","el","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/link.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\nconst Link = () => {\n    gsap.registerPlugin(SplitText);\n    let linkButton = useRef(null);\n    let linkButtonBorder = useRef(null);\n    let linkButtonText = useRef(null);\n    let linkButtonIcon = useRef(null);\n\n    useEffect(() => {\n        const linkTL = gsap.timeline();\n        // parentDiv.addEventListener('mouseenter', () => { linkTL.play() })\n        // parentDiv.addEventListener('mouseleave', () => { linkTL.reverse() })\n    });\n\n\n    // onClick = {() => { toggleModal(); }}\n\n    return (\n        <div ref={el => linkButton = el} className=\"nav-button\"  >\n            <div ref={el => linkButtonBorder = el} className=\"nav-button-border\" />\n            <div ref={el => linkButtonText = el} className=\"nav-button-text\">\n                <p>\n                    Menu\n                </p>\n            </div>\n            <div ref={el => linkButtonIcon = el} className=\"nav-button-icon\">\n                <div className=\"nav-button-icon-horizontal\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Link;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C;AACA,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACfL,IAAI,CAACM,cAAc,CAACL,SAAS,CAAC;EAC9B,IAAIM,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIS,gBAAgB,GAAGT,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIU,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EACjC,IAAIW,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,MAAMa,MAAM,GAAGX,IAAI,CAACY,QAAQ,CAAC,CAAC;IAC9B;IACA;EACJ,CAAC,CAAC;;EAGF;;EAEA,oBACIT,OAAA;IAAKU,GAAG,EAAEC,EAAE,IAAIP,UAAU,GAAGO,EAAG;IAACC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACnDb,OAAA;MAAKU,GAAG,EAAEC,EAAE,IAAIN,gBAAgB,GAAGM,EAAG;MAACC,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEjB,OAAA;MAAKU,GAAG,EAAEC,EAAE,IAAIL,cAAc,GAAGK,EAAG;MAACC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5Db,OAAA;QAAAa,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjB,OAAA;MAAKU,GAAG,EAAEC,EAAE,IAAIJ,cAAc,GAAGI,EAAG;MAACC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5Db,OAAA;QAAKY,SAAS,EAAC;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAf,EAAA,CA7BKD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}