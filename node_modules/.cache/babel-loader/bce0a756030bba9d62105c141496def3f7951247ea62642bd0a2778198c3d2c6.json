{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/loader/loader.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useRef, useState, ud } from 'react';\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../../styles/loader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TIME = 5;\nconst Loader = () => {\n  _s();\n  //refs\n  let loaderCounter = useRef(null);\n  let loaderHeader = useRef(null);\n\n  //initialize gsap plugins\n  gsap.registerPlugin(SplitText);\n  useLayoutEffect(() => {\n    let ctx = gsap.context(() => {\n      //define timeline\n      const tl = gsap.timeline();\n      tl.from(loaderInfo, {\n        duration: DURATION,\n        delay: 0.5,\n        opacity: 0,\n        y: 100,\n        ease: \"ease\"\n      });\n      tl.to(loaderInfo, {\n        duration: DURATION,\n        delay: 5.5,\n        opacity: 0,\n        y: -100,\n        ease: \"ease\"\n      });\n    });\n    return () => ctx.revert();\n  });\n\n  // const [progress, setProgress] = useState(0);\n\n  // //initialize gsap plugins\n  // gsap.registerPlugin(SplitText);\n\n  // //counter refs\n  // // let loaderNumber100 = useRef(null);\n  // // let loaderNumber88 = useRef(null);\n  // // let loaderNumber22 = useRef(null);\n  // // let loaderNumber0 = useRef(null);\n  // // let loaderNumberPercent = useRef(null);\n  // //loader info refs\n  // let loaderInfo = useRef(null);\n\n  // useLayoutEffect(() => {\n  //     let ctx = gsap.context(() => {\n  //         //define timeline\n  //         const tl = gsap.timeline(),\n  //             loaderNumber22Split = new SplitText(loaderNumber22, { type: \"chars\" }),\n  //             loaderNumber88Split = new SplitText(loaderNumber88, { type: \"chars\" }),\n  //             loaderNumber100Split = new SplitText(loaderNumber100, { type: \"chars\" }),\n  //             chars22 = loaderNumber22Split.chars,\n  //             chars88 = loaderNumber88Split.chars,\n  //             chars100 = loaderNumber100Split.chars;\n\n  //         tl.from(loaderNumber0, {\n  //             duration: DURATION,\n  //             delay: 0.5,\n  //             opacity: 0,\n  //             y: 100,\n  //             ease: \"ease\",\n  //         });\n  //         tl.from(loaderNumberPercent, {\n  //             duration: DURATION,\n  //             delay: PERCENT_DELAY,\n  //             opacity: 0,\n  //             y: 100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //         });\n  //         tl.to(loaderNumber0, {\n  //             duration: DURATION,\n  //             delay: NUMBER_DELAY,\n  //             opacity: 0,\n  //             y: -100,\n  //             ease: \"ease\",\n  //         });\n  //         tl.from(chars22, {\n  //             duration: DURATION,\n  //             opacity: 0,\n  //             y: 100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.to(chars22, {\n  //             duration: DURATION,\n  //             delay: NUMBER_DELAY,\n  //             opacity: 0,\n  //             y: -100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.from(chars88, {\n  //             duration: DURATION,\n  //             opacity: 0,\n  //             y: 100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.to(chars88, {\n  //             duration: DURATION,\n  //             delay: NUMBER_DELAY,\n  //             opacity: 0,\n  //             y: -100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.from(chars100, {\n  //             duration: DURATION,\n  //             opacity: 0,\n  //             y: 100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.to(chars100, {\n  //             duration: DURATION,\n  //             delay: NUMBER_DELAY,\n  //             opacity: 0,\n  //             y: -100,\n  //             rotationX: 0,\n  //             ease: \"ease\",\n  //             stagger: 0.1\n  //         });\n  //         tl.to(loaderNumberPercent, {\n  //             duration: DURATION,\n  //             delay: PERCENT_DELAY,\n  //             opacity: 0,\n  //             y: -100,\n  //             ease: \"ease\",\n  //         });\n\n  //     })\n\n  //     return () => ctx.revert();\n\n  // })\n\n  // useLayoutEffect(() => {\n  //     let ctx = gsap.context(() => {\n  //         //define timeline\n  //         const tl = gsap.timeline();\n\n  //         tl.from(loaderInfo, {\n  //             duration: DURATION,\n  //             delay: 0.5,\n  //             opacity: 0,\n  //             y: 100,\n  //             ease: \"ease\",\n  //         });\n  //         tl.to(loaderInfo, {\n  //             duration: DURATION,\n  //             delay: 5.5,\n  //             opacity: 0,\n  //             y: -100,\n  //             ease: \"ease\",\n  //         });\n\n  //     })\n\n  //     return () => ctx.revert();\n\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loader\",\n    className: \"loader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: el => loaderCounter = el,\n        className: \"loader-counter\",\n        children: \"000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        ref: el => loaderHeader = el,\n        className: \"loader-header\",\n        children: \"Hello.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(Loader, \"oodhNoMm/x2ifEQZHByVvhi0/ho=\");\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","ud","gsap","SplitText","jsxDEV","_jsxDEV","TIME","Loader","_s","loaderCounter","loaderHeader","registerPlugin","ctx","context","tl","timeline","from","loaderInfo","duration","DURATION","delay","opacity","y","ease","to","revert","id","className","children","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/loader/loader.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState, ud } from 'react';\nimport { gsap } from \"gsap\";\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../../styles/loader.css';\n\nconst TIME = 5;\n\nconst Loader = () => {\n    //refs\n    let loaderCounter = useRef(null);\n    let loaderHeader = useRef(null);\n\n    //initialize gsap plugins\n    gsap.registerPlugin(SplitText);\n\n\n\n    useLayoutEffect(() => {\n        let ctx = gsap.context(() => {\n            //define timeline\n            const tl = gsap.timeline();\n\n            tl.from(loaderInfo, {\n                duration: DURATION,\n                delay: 0.5,\n                opacity: 0,\n                y: 100,\n                ease: \"ease\",\n            });\n            tl.to(loaderInfo, {\n                duration: DURATION,\n                delay: 5.5,\n                opacity: 0,\n                y: -100,\n                ease: \"ease\",\n            });\n\n        })\n\n        return () => ctx.revert();\n\n    });\n\n\n\n\n    // const [progress, setProgress] = useState(0);\n\n    // //initialize gsap plugins\n    // gsap.registerPlugin(SplitText);\n\n    // //counter refs\n    // // let loaderNumber100 = useRef(null);\n    // // let loaderNumber88 = useRef(null);\n    // // let loaderNumber22 = useRef(null);\n    // // let loaderNumber0 = useRef(null);\n    // // let loaderNumberPercent = useRef(null);\n    // //loader info refs\n    // let loaderInfo = useRef(null);\n\n    // useLayoutEffect(() => {\n    //     let ctx = gsap.context(() => {\n    //         //define timeline\n    //         const tl = gsap.timeline(),\n    //             loaderNumber22Split = new SplitText(loaderNumber22, { type: \"chars\" }),\n    //             loaderNumber88Split = new SplitText(loaderNumber88, { type: \"chars\" }),\n    //             loaderNumber100Split = new SplitText(loaderNumber100, { type: \"chars\" }),\n    //             chars22 = loaderNumber22Split.chars,\n    //             chars88 = loaderNumber88Split.chars,\n    //             chars100 = loaderNumber100Split.chars;\n\n    //         tl.from(loaderNumber0, {\n    //             duration: DURATION,\n    //             delay: 0.5,\n    //             opacity: 0,\n    //             y: 100,\n    //             ease: \"ease\",\n    //         });\n    //         tl.from(loaderNumberPercent, {\n    //             duration: DURATION,\n    //             delay: PERCENT_DELAY,\n    //             opacity: 0,\n    //             y: 100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //         });\n    //         tl.to(loaderNumber0, {\n    //             duration: DURATION,\n    //             delay: NUMBER_DELAY,\n    //             opacity: 0,\n    //             y: -100,\n    //             ease: \"ease\",\n    //         });\n    //         tl.from(chars22, {\n    //             duration: DURATION,\n    //             opacity: 0,\n    //             y: 100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.to(chars22, {\n    //             duration: DURATION,\n    //             delay: NUMBER_DELAY,\n    //             opacity: 0,\n    //             y: -100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.from(chars88, {\n    //             duration: DURATION,\n    //             opacity: 0,\n    //             y: 100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.to(chars88, {\n    //             duration: DURATION,\n    //             delay: NUMBER_DELAY,\n    //             opacity: 0,\n    //             y: -100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.from(chars100, {\n    //             duration: DURATION,\n    //             opacity: 0,\n    //             y: 100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.to(chars100, {\n    //             duration: DURATION,\n    //             delay: NUMBER_DELAY,\n    //             opacity: 0,\n    //             y: -100,\n    //             rotationX: 0,\n    //             ease: \"ease\",\n    //             stagger: 0.1\n    //         });\n    //         tl.to(loaderNumberPercent, {\n    //             duration: DURATION,\n    //             delay: PERCENT_DELAY,\n    //             opacity: 0,\n    //             y: -100,\n    //             ease: \"ease\",\n    //         });\n\n    //     })\n\n    //     return () => ctx.revert();\n\n    // })\n\n    // useLayoutEffect(() => {\n    //     let ctx = gsap.context(() => {\n    //         //define timeline\n    //         const tl = gsap.timeline();\n\n    //         tl.from(loaderInfo, {\n    //             duration: DURATION,\n    //             delay: 0.5,\n    //             opacity: 0,\n    //             y: 100,\n    //             ease: \"ease\",\n    //         });\n    //         tl.to(loaderInfo, {\n    //             duration: DURATION,\n    //             delay: 5.5,\n    //             opacity: 0,\n    //             y: -100,\n    //             ease: \"ease\",\n    //         });\n\n    //     })\n\n    //     return () => ctx.revert();\n\n    // })\n\n\n\n    return (\n        <div id=\"loader\" className='loader'>\n            <div className='loader-container'>\n                <p ref={el => loaderCounter = el} className='loader-counter'>\n                    000\n                </p>\n                <h1 ref={el => loaderHeader = el} className='loader-header'>\n                    Hello.\n                </h1>\n            </div>\n        </div >\n    );\n}\n\nexport default Loader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}