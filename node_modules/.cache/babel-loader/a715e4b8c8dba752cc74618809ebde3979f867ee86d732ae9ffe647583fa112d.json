{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nconst AboutTransitionEnter = ({\n  node\n}) => {\n  // gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.header');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.from(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: 100,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // });\n};\n_c = AboutTransitionEnter;\nconst AboutTransitionExit = ({\n  node\n}) => {\n  // gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.header');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.to(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: -100,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // });\n};\n_c2 = AboutTransitionExit;\nexport { AboutTransitionEnter, AboutTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"AboutTransitionEnter\");\n$RefreshReg$(_c2, \"AboutTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","AboutTransitionEnter","node","_c","AboutTransitionExit","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/about/aboutTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n\nconst AboutTransitionEnter = ({ node }) => {\n    // gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.header');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.from(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: 100,\n    //     rotationX: 0,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // });\n}\n\nconst AboutTransitionExit = ({ node }) => {\n    // gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.header');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.to(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: -100,\n    //     rotationX: 0,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // });\n}\n\nexport { AboutTransitionEnter, AboutTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACvC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAC,EAAA,GAfKF,oBAAoB;AAiB1B,MAAMG,mBAAmB,GAAGA,CAAC;EAAEF;AAAK,CAAC,KAAK;EACtC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAG,GAAA,GAfKD,mBAAmB;AAiBzB,SAASH,oBAAoB,EAAEG,mBAAmB;AAAG,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}