{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTransition = ({\n  children,\n  timeout,\n  onEnter,\n  onExit\n}) => {\n  _s();\n  const nodeRef = useRef(null);\n  const handleEnter = () => {\n    if (onEnter) {\n      onEnter(nodeRef.current);\n    }\n  };\n  const handleExit = () => {\n    if (onExit) {\n      onExit(nodeRef.current, () => {\n        // The remove method is used to properly unmount the component\n        // after the exit animation is complete\n        nodeRef.current.remove();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    nodeRef: nodeRef,\n    timeout: timeout,\n    onEnter: handleEnter,\n    onExit: handleExit,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomTransition, \"yvW29NmA8pAJ4XJF0oTdFKrFGVU=\");\n_c = CustomTransition;\nconst Header = ({\n  headerContent\n}) => {\n  _s2();\n  gsap.registerPlugin(SplitText);\n  let header = useRef(null);\n  let animationNode = useRef(null);\n  useEffect(() => {\n    var tl = gsap.timeline(),\n      mySplitText = new SplitText(header, {\n        type: \"chars\"\n      }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n      duration: 0.8,\n      opacity: 0,\n      y: 200,\n      rotationX: 0,\n      ease: \"ease\",\n      stagger: 0.1\n    });\n  }, [header]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => header = el,\n        children: headerContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchTransition, {\n      children: /*#__PURE__*/_jsxDEV(CustomTransition, {\n        timeout: 300,\n        onEnter: animateIn(),\n        onExit: animateOut(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: el => animationNode = el,\n          children: \"This paragraph will animate with GSAP when switching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, \"about-paragraph\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(Header, \"QI1eBRPG7ABCdkIyC+9a4CAekaw=\");\n_c2 = Header;\nexport default Header;\n\n// import React from \"react\";\n// import { SwitchTransition, Transition } from \"react-transition-group\";\n// import { gsap } from \"gsap\";\n\n// const About = () => {\n//   const animateIn = (node) => {\n//     gsap.from(node, { opacity: 0, y: -20, duration: 0.3 });\n//   };\n\n//   const animateOut = (node) => {\n//     gsap.to(node, { opacity: 0, y: -20, duration: 0.3 });\n//   };\n\n//   return (\n//     <div>\n//       <h1>About Page</h1>\n//       <SwitchTransition>\n//         <Transition key=\"about-paragraph\" timeout={300} onEnter={animateIn} onExit={animateOut}>\n//           <p>This paragraph will animate with GSAP when switching.</p>\n//         </Transition>\n//         <Transition key=\"about-div\" timeout={300} onEnter={animateIn} onExit={animateOut}>\n//           <div>This div will also animate with GSAP when switching.</div>\n//         </Transition>\n//       </SwitchTransition>\n//     </div>\n//   );\n// };\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTransition\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","SwitchTransition","Transition","jsxDEV","_jsxDEV","CustomTransition","children","timeout","onEnter","onExit","_s","nodeRef","handleEnter","current","handleExit","remove","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header","headerContent","_s2","registerPlugin","header","animationNode","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","rotationX","ease","stagger","className","ref","el","animateIn","animateOut","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\n\nconst CustomTransition = ({ children, timeout, onEnter, onExit }) => {\n  const nodeRef = useRef(null);\n\n  const handleEnter = () => {\n    if (onEnter) {\n      onEnter(nodeRef.current);\n    }\n  };\n\n  const handleExit = () => {\n    if (onExit) {\n      onExit(nodeRef.current, () => {\n        // The remove method is used to properly unmount the component\n        // after the exit animation is complete\n        nodeRef.current.remove();\n      });\n    }\n  };\n\n  return (\n    <Transition\n      nodeRef={nodeRef}\n      timeout={timeout}\n      onEnter={handleEnter}\n      onExit={handleExit}\n    >\n      {children}\n    </Transition>\n  );\n};\n\nconst Header = ({ headerContent }) => {\n  gsap.registerPlugin(SplitText);\n  let header = useRef(null);\n\n  let animationNode = useRef(null);\n\n  useEffect(() => {\n\n    var tl = gsap.timeline(),\n      mySplitText = new SplitText(header, { type: \"chars\" }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n      duration: 0.8,\n      opacity: 0,\n      y: 200,\n      rotationX: 0,\n      ease: \"ease\",\n      stagger: 0.1\n    });\n\n  }, [header])\n\n\n  return (\n\n    <div className='header-container'>\n      <h1 className='header'>\n        <div ref={el => header = el}>\n          {headerContent}\n        </div>\n      </h1>\n\n      <SwitchTransition>\n        <CustomTransition key=\"about-paragraph\" timeout={300} onEnter={animateIn()} onExit={animateOut()}>\n          <p ref={el => animationNode = el}>This paragraph will animate with GSAP when switching.</p>\n        </CustomTransition>\n      </SwitchTransition>\n    </div>\n\n  );\n}\n\nexport default Header;\n\n\n\n// import React from \"react\";\n// import { SwitchTransition, Transition } from \"react-transition-group\";\n// import { gsap } from \"gsap\";\n\n// const About = () => {\n//   const animateIn = (node) => {\n//     gsap.from(node, { opacity: 0, y: -20, duration: 0.3 });\n//   };\n\n//   const animateOut = (node) => {\n//     gsap.to(node, { opacity: 0, y: -20, duration: 0.3 });\n//   };\n\n//   return (\n//     <div>\n//       <h1>About Page</h1>\n//       <SwitchTransition>\n//         <Transition key=\"about-paragraph\" timeout={300} onEnter={animateIn} onExit={animateOut}>\n//           <p>This paragraph will animate with GSAP when switching.</p>\n//         </Transition>\n//         <Transition key=\"about-div\" timeout={300} onEnter={animateIn} onExit={animateOut}>\n//           <div>This div will also animate with GSAP when switching.</div>\n//         </Transition>\n//       </SwitchTransition>\n//     </div>\n//   );\n// };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,wBAAwB;AACrE;AACA,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,OAAO,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,OAAO,EAAE;MACXA,OAAO,CAACG,OAAO,CAACE,OAAO,CAAC;IAC1B;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,MAAM,EAAE;MACVA,MAAM,CAACE,OAAO,CAACE,OAAO,EAAE,MAAM;QAC5B;QACA;QACAF,OAAO,CAACE,OAAO,CAACE,MAAM,CAAC,CAAC;MAC1B,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEX,OAAA,CAACF,UAAU;IACTS,OAAO,EAAEA,OAAQ;IACjBJ,OAAO,EAAEA,OAAQ;IACjBC,OAAO,EAAEI,WAAY;IACrBH,MAAM,EAAEK,UAAW;IAAAR,QAAA,EAElBA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAACT,EAAA,CA7BIL,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AA+BtB,MAAMgB,MAAM,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,GAAA;EACpCxB,IAAI,CAACyB,cAAc,CAACxB,SAAS,CAAC;EAC9B,IAAIyB,MAAM,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAEzB,IAAI4B,aAAa,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IAEd,IAAI8B,EAAE,GAAG5B,IAAI,CAAC6B,QAAQ,CAAC,CAAC;MACtBC,WAAW,GAAG,IAAI7B,SAAS,CAACyB,MAAM,EAAE;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;MACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;IAE7BJ,EAAE,CAACK,IAAI,CAACD,KAAK,EAAE;MACbE,QAAQ,EAAE,GAAG;MACbC,OAAO,EAAE,CAAC;MACVC,CAAC,EAAE,GAAG;MACNC,SAAS,EAAE,CAAC;MACZC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;IACX,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAGZ,oBAEErB,OAAA;IAAKmC,SAAS,EAAC,kBAAkB;IAAAjC,QAAA,gBAC/BF,OAAA;MAAImC,SAAS,EAAC,QAAQ;MAAAjC,QAAA,eACpBF,OAAA;QAAKoC,GAAG,EAAEC,EAAE,IAAIhB,MAAM,GAAGgB,EAAG;QAAAnC,QAAA,EACzBgB;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAELf,OAAA,CAACH,gBAAgB;MAAAK,QAAA,eACfF,OAAA,CAACC,gBAAgB;QAAuBE,OAAO,EAAE,GAAI;QAACC,OAAO,EAAEkC,SAAS,CAAC,CAAE;QAACjC,MAAM,EAAEkC,UAAU,CAAC,CAAE;QAAArC,QAAA,eAC/FF,OAAA;UAAGoC,GAAG,EAAEC,EAAE,IAAIf,aAAa,GAAGe,EAAG;UAAAnC,QAAA,EAAC;QAAqD;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,GADvE,iBAAiB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAGV,CAAC;AAAAI,GAAA,CAzCKF,MAAM;AAAAuB,GAAA,GAANvB,MAAM;AA2CZ,eAAeA,MAAM;;AAIrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}