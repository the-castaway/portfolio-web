{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nconst AboutTransitionEnter = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  console.log(node);\n  const header = node.querySelectorAll('.header');\n  const tl = gsap.timeline(),\n    mySplitText = new SplitText(header, {\n      type: \"chars\"\n    }),\n    chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.from(chars, {\n    duration: 0.8,\n    opacity: 0,\n    y: 200,\n    rotationX: 0,\n    ease: \"ease\",\n    stagger: 0.1\n  });\n};\n_c = AboutTransitionEnter;\nconst AboutTransitionExit = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  console.log(node);\n  const header = node.querySelectorAll('.header');\n  const tl = gsap.timeline(),\n    mySplitText = new SplitText(header, {\n      type: \"chars\"\n    }),\n    chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.to(chars, {\n    duration: 0.8,\n    opacity: 0,\n    y: -200,\n    rotationX: 0,\n    ease: \"ease\",\n    stagger: 0.1\n  });\n};\n_c2 = AboutTransitionExit;\nexport { AboutTransitionEnter, AboutTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"AboutTransitionEnter\");\n$RefreshReg$(_c2, \"AboutTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","AboutTransitionEnter","node","registerPlugin","console","log","header","querySelectorAll","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","rotationX","ease","stagger","_c","AboutTransitionExit","to","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/about/aboutTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n\nconst AboutTransitionEnter = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    console.log(node);\n    const header = node.querySelectorAll('.header');\n    const tl = gsap.timeline(),\n        mySplitText = new SplitText(header, { type: \"chars\" }),\n        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: 200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n    });\n}\n\nconst AboutTransitionExit = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    console.log(node);\n    const header = node.querySelectorAll('.header');\n    const tl = gsap.timeline(),\n        mySplitText = new SplitText(header, { type: \"chars\" }),\n        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.to(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: -200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n    });\n}\n\nexport { AboutTransitionEnter, AboutTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACvCH,IAAI,CAACI,cAAc,CAACH,SAAS,CAAC;EAC9BI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,MAAMI,MAAM,GAAGJ,IAAI,CAACK,gBAAgB,CAAC,SAAS,CAAC;EAC/C,MAAMC,EAAE,GAAGT,IAAI,CAACU,QAAQ,CAAC,CAAC;IACtBC,WAAW,GAAG,IAAIV,SAAS,CAACM,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAQ,CAAC,CAAC;IACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;EAE/BJ,EAAE,CAACK,IAAI,CAACD,KAAK,EAAE;IACXE,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,GAAG;IACNC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,CAAC;AACN,CAAC;AAAAC,EAAA,GAhBKnB,oBAAoB;AAkB1B,MAAMoB,mBAAmB,GAAGA,CAAC;EAAEnB;AAAK,CAAC,KAAK;EACtCH,IAAI,CAACI,cAAc,CAACH,SAAS,CAAC;EAC9BI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,MAAMI,MAAM,GAAGJ,IAAI,CAACK,gBAAgB,CAAC,SAAS,CAAC;EAC/C,MAAMC,EAAE,GAAGT,IAAI,CAACU,QAAQ,CAAC,CAAC;IACtBC,WAAW,GAAG,IAAIV,SAAS,CAACM,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAQ,CAAC,CAAC;IACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;EAE/BJ,EAAE,CAACc,EAAE,CAACV,KAAK,EAAE;IACTE,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,CAAC,GAAG;IACPC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,CAAC;AACN,CAAC;AAAAI,GAAA,GAhBKF,mBAAmB;AAkBzB,SAASpB,oBAAoB,EAAEoB,mBAAmB;AAAG,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}