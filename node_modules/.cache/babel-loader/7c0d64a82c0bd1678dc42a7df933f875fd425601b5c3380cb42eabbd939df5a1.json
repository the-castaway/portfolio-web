{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nconst HomeTransitionEnter = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  const header = node.querySelectorAll('.header');\n  //const video = node.querySelectorAll('.home-video-content');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.from(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: 100,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // });\n  // tl.from(video, {\n  //     duration: 0.4,\n  //     delay: -0.3,\n  //     opacity: 0,\n  //     y: 100,\n  //     ease: \"ease\",\n  // });\n};\n_c = HomeTransitionEnter;\nconst HomeTransitionExit = ({\n  node\n}) => {\n  // gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.header');\n  // const video = node.querySelectorAll('.home-video-content');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.to(video, {\n  //     duration: 0.8,\n  //     width: 300,\n  //     ease: \"ease\",\n  // }, 0);\n  // tl.to(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: -100,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // }, 0);\n  // tl.to(video, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     ease: \"ease\",\n  // });\n};\n_c2 = HomeTransitionExit;\nexport { HomeTransitionEnter, HomeTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"HomeTransitionEnter\");\n$RefreshReg$(_c2, \"HomeTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","HomeTransitionEnter","node","registerPlugin","header","querySelectorAll","_c","HomeTransitionExit","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/home/homeTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n\nconst HomeTransitionEnter = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    const header = node.querySelectorAll('.header');\n    //const video = node.querySelectorAll('.home-video-content');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.from(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: 100,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // });\n    // tl.from(video, {\n    //     duration: 0.4,\n    //     delay: -0.3,\n    //     opacity: 0,\n    //     y: 100,\n    //     ease: \"ease\",\n    // });\n}\n\nconst HomeTransitionExit = ({ node }) => {\n    // gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.header');\n    // const video = node.querySelectorAll('.home-video-content');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.to(video, {\n    //     duration: 0.8,\n    //     width: 300,\n    //     ease: \"ease\",\n    // }, 0);\n    // tl.to(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: -100,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // }, 0);\n    // tl.to(video, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     ease: \"ease\",\n    // });\n}\n\nexport { HomeTransitionEnter, HomeTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACtCH,IAAI,CAACI,cAAc,CAACH,SAAS,CAAC;EAC9B,MAAMI,MAAM,GAAGF,IAAI,CAACG,gBAAgB,CAAC,SAAS,CAAC;EAC/C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAAAC,EAAA,GAtBKL,mBAAmB;AAwBzB,MAAMM,kBAAkB,GAAGA,CAAC;EAAEL;AAAK,CAAC,KAAK;EACrC;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAM,GAAA,GAzBKD,kBAAkB;AA2BxB,SAASN,mBAAmB,EAAEM,kBAAkB;AAAG,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}