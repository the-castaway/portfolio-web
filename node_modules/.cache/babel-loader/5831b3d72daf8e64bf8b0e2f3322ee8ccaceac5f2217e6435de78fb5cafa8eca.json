{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\nimport { useLocation } from \"react-router-dom\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  headerContent,\n  isActive\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  const header = useRef(null);\n  useEffect(() => {\n    const tl = gsap.timeline(),\n      mySplitText = new SplitText(header, {\n        type: \"chars\"\n      }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    if (isActive) {\n      tl.from(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: 200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n      });\n    } else {\n      tl.to(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: -200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n      });\n    }\n  }, [isActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: header,\n        children: headerContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"CnXpd1zr80rCXQ+rNWyXkLxd19w=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","SwitchTransition","Transition","useLocation","jsxDEV","_jsxDEV","Header","headerContent","isActive","_s","registerPlugin","header","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","rotationX","ease","stagger","to","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\nimport {\n  useLocation,\n} from \"react-router-dom\"\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\nconst Header = ({ headerContent, isActive }) => {\n  gsap.registerPlugin(SplitText);\n  const header = useRef(null);\n\n  useEffect(() => {\n    const tl = gsap.timeline(),\n      mySplitText = new SplitText(header, { type: \"chars\" }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    if (isActive) {\n      tl.from(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: 200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n      });\n    }\n    else {\n      tl.to(chars, {\n        duration: 0.8,\n        opacity: 0,\n        y: -200,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.1\n      });\n    }\n  }, [isActive])\n\n\n  return (\n\n    <div className='header-container'>\n      <h1 className='header'>\n        <div ref={header}>\n          {headerContent}\n        </div>\n      </h1>\n    </div>\n\n  );\n}\n\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,wBAAwB;AACrE,SACEC,WAAW,QACN,kBAAkB;AACzB;AACA,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9CV,IAAI,CAACW,cAAc,CAACV,SAAS,CAAC;EAC9B,MAAMW,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMe,EAAE,GAAGb,IAAI,CAACc,QAAQ,CAAC,CAAC;MACxBC,WAAW,GAAG,IAAId,SAAS,CAACW,MAAM,EAAE;QAAEI,IAAI,EAAE;MAAQ,CAAC,CAAC;MACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;IAE7B,IAAIR,QAAQ,EAAE;MACZI,EAAE,CAACK,IAAI,CAACD,KAAK,EAAE;QACbE,QAAQ,EAAE,GAAG;QACbC,OAAO,EAAE,CAAC;QACVC,CAAC,EAAE,GAAG;QACNC,SAAS,EAAE,CAAC;QACZC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,MACI;MACHX,EAAE,CAACY,EAAE,CAACR,KAAK,EAAE;QACXE,QAAQ,EAAE,GAAG;QACbC,OAAO,EAAE,CAAC;QACVC,CAAC,EAAE,CAAC,GAAG;QACPC,SAAS,EAAE,CAAC;QACZC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAGd,oBAEEH,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BrB,OAAA;MAAIoB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACpBrB,OAAA;QAAKsB,GAAG,EAAEhB,MAAO;QAAAe,QAAA,EACdnB;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGV,CAAC;AAAAtB,EAAA,CA3CKH,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}