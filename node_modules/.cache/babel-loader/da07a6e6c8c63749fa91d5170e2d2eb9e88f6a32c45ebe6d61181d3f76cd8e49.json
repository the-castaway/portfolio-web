{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/link.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Link = ({\n  parent\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  let linkButton = useRef(null);\n  let linkButtonBorder = useRef(null);\n  let linkButtonText = useRef(null);\n  let linkButtonIcon = useRef(null);\n  useEffect(() => {\n    const linkTL = gsap.timeline();\n    parent.addEventListener('mouseenter', () => {\n      linkTL.play();\n    });\n    parent.addEventListener('mouseleave', () => {\n      linkTL.reverse();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => linkButton = el,\n    className: \"nav-button\",\n    onClick: () => {\n      toggleModal();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonBorder = el,\n      className: \"nav-button-border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonText = el,\n      className: \"nav-button-text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => linkButtonIcon = el,\n      className: \"nav-button-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-button-icon-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Link, \"Gl6XXge+nFQyFS/SmTQZ2G4f5PM=\");\n_c = Link;\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","jsxDEV","_jsxDEV","Link","parent","_s","registerPlugin","linkButton","linkButtonBorder","linkButtonText","linkButtonIcon","linkTL","timeline","addEventListener","play","reverse","ref","el","className","onClick","toggleModal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/link.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\nconst Link = ({ parent }) => {\n    gsap.registerPlugin(SplitText);\n    let linkButton = useRef(null);\n    let linkButtonBorder = useRef(null);\n    let linkButtonText = useRef(null);\n    let linkButtonIcon = useRef(null);\n\n    useEffect(() => {\n        const linkTL = gsap.timeline();\n        parent.addEventListener('mouseenter', () => { linkTL.play() })\n        parent.addEventListener('mouseleave', () => { linkTL.reverse() })\n    }, []);\n\n    return (\n        <div ref={el => linkButton = el} className=\"nav-button\" onClick={() => { toggleModal(); }} >\n            <div ref={el => linkButtonBorder = el} className=\"nav-button-border\" />\n            <div ref={el => linkButtonText = el} className=\"nav-button-text\">\n                <p>\n                    Menu\n                </p>\n            </div>\n            <div ref={el => linkButtonIcon = el} className=\"nav-button-icon\">\n                <div className=\"nav-button-icon-horizontal\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Link;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C;AACA,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzBN,IAAI,CAACO,cAAc,CAACN,SAAS,CAAC;EAC9B,IAAIO,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIU,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIW,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EACjC,IAAIY,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,MAAMc,MAAM,GAAGZ,IAAI,CAACa,QAAQ,CAAC,CAAC;IAC9BR,MAAM,CAACS,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAAEF,MAAM,CAACG,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC;IAC9DV,MAAM,CAACS,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAAEF,MAAM,CAACI,OAAO,CAAC,CAAC;IAAC,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAKc,GAAG,EAAEC,EAAE,IAAIV,UAAU,GAAGU,EAAG;IAACC,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEA,CAAA,KAAM;MAAEC,WAAW,CAAC,CAAC;IAAE,CAAE;IAAAC,QAAA,gBACtFnB,OAAA;MAAKc,GAAG,EAAEC,EAAE,IAAIT,gBAAgB,GAAGS,EAAG;MAACC,SAAS,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEvB,OAAA;MAAKc,GAAG,EAAEC,EAAE,IAAIR,cAAc,GAAGQ,EAAG;MAACC,SAAS,EAAC,iBAAiB;MAAAG,QAAA,eAC5DnB,OAAA;QAAAmB,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvB,OAAA;MAAKc,GAAG,EAAEC,EAAE,IAAIP,cAAc,GAAGO,EAAG;MAACC,SAAS,EAAC,iBAAiB;MAAAG,QAAA,eAC5DnB,OAAA;QAAKgB,SAAS,EAAC;MAA4B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAApB,EAAA,CA1BKF,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}