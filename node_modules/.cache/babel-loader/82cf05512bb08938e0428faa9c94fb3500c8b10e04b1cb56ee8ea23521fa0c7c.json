{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\nimport { useLocation } from \"react-router-dom\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  headerContent,\n  isActive\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  const header = useRef(null);\n  const animationRef = useRef(null);\n  const elementRef = useRef(null);\n\n  // useEffect(() => {\n  //   const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  //   if (isActive) {\n  //     tl.from(chars, {\n  //       duration: 0.8,\n  //       opacity: 0,\n  //       y: 200,\n  //       rotationX: 0,\n  //       ease: \"ease\",\n  //       stagger: 0.1\n  //     });\n  //   }\n  //   else {\n  //     tl.to(chars, {\n  //       duration: 0.8,\n  //       opacity: 0,\n  //       y: -200,\n  //       rotationX: 0,\n  //       ease: \"ease\",\n  //       stagger: 0.1\n  //     });\n  //   }\n  // }, [isActive])\n\n  // useEffect(() => {\n  //   // Define the animations\n  //   const fadeInAnimation = gsap.to(elementRef.current, {\n  //     opacity: 1,\n  //     duration: 1,\n  //     paused: true, // Pause the animation initially\n  //   });\n\n  //   const fadeOutAnimation = gsap.to(elementRef.current, {\n  //     opacity: 0,\n  //     duration: 1,\n  //     paused: true, // Pause the animation initially\n  //   });\n\n  //   // Save the animations in the animationRef\n  //   animationRef.current = { fadeInAnimation, fadeOutAnimation };\n  // }, []);\n\n  // useEffect(() => {\n  //   // Control the animations based on the isActive prop\n  //   if (isActive) {\n  //     animationRef.current.fadeInAnimation.play(); // Play fadeInAnimation\n  //     animationRef.current.fadeOutAnimation.pause(); // Pause fadeOutAnimation\n  //   } else {\n  //     animationRef.current.fadeInAnimation.pause(); // Pause fadeInAnimation\n  //     animationRef.current.fadeOutAnimation.play(); // Play fadeOutAnimation\n  //   }\n  // }, [isActive]);\n\n  useEffect(() => {\n    if (isActive === true) {\n      // GSAP animation for \"active\" state\n      gsap.to(elementRef.current, {\n        opacity: 1,\n        duration: 1\n      });\n    } else {\n      // GSAP animation for \"not active\" state\n      gsap.to(elementRef.current, {\n        opacity: 0,\n        duration: 1\n      });\n    }\n  }, [isActive]);\n\n  // if (isExiting) {\n  //   console.log('gsap active')\n\n  //   // var tl = gsap.timeline(),\n  //   //   mySplitText = new SplitText(header, { type: \"chars\" }),\n  //   //   chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  //   tl.from(chars, {\n  //     duration: 0.8,\n  //     opacity: 0,\n  //     y: 200,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.1\n  //   });\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: elementRef,\n        children: headerContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"doIFjHqjX5A+2KA7/oFrmfljzVo=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","SwitchTransition","Transition","useLocation","jsxDEV","_jsxDEV","Header","headerContent","isActive","_s","registerPlugin","header","animationRef","elementRef","to","current","opacity","duration","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\nimport {\n  useLocation,\n} from \"react-router-dom\"\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\nconst Header = ({ headerContent, isActive }) => {\n  gsap.registerPlugin(SplitText);\n  const header = useRef(null);\n  const animationRef = useRef(null);\n  const elementRef = useRef(null);\n\n  // useEffect(() => {\n  //   const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  //   if (isActive) {\n  //     tl.from(chars, {\n  //       duration: 0.8,\n  //       opacity: 0,\n  //       y: 200,\n  //       rotationX: 0,\n  //       ease: \"ease\",\n  //       stagger: 0.1\n  //     });\n  //   }\n  //   else {\n  //     tl.to(chars, {\n  //       duration: 0.8,\n  //       opacity: 0,\n  //       y: -200,\n  //       rotationX: 0,\n  //       ease: \"ease\",\n  //       stagger: 0.1\n  //     });\n  //   }\n  // }, [isActive])\n\n\n  // useEffect(() => {\n  //   // Define the animations\n  //   const fadeInAnimation = gsap.to(elementRef.current, {\n  //     opacity: 1,\n  //     duration: 1,\n  //     paused: true, // Pause the animation initially\n  //   });\n\n  //   const fadeOutAnimation = gsap.to(elementRef.current, {\n  //     opacity: 0,\n  //     duration: 1,\n  //     paused: true, // Pause the animation initially\n  //   });\n\n  //   // Save the animations in the animationRef\n  //   animationRef.current = { fadeInAnimation, fadeOutAnimation };\n  // }, []);\n\n  // useEffect(() => {\n  //   // Control the animations based on the isActive prop\n  //   if (isActive) {\n  //     animationRef.current.fadeInAnimation.play(); // Play fadeInAnimation\n  //     animationRef.current.fadeOutAnimation.pause(); // Pause fadeOutAnimation\n  //   } else {\n  //     animationRef.current.fadeInAnimation.pause(); // Pause fadeInAnimation\n  //     animationRef.current.fadeOutAnimation.play(); // Play fadeOutAnimation\n  //   }\n  // }, [isActive]);\n\n  useEffect(() => {\n    if (isActive === true) {\n      // GSAP animation for \"active\" state\n      gsap.to(elementRef.current, {\n        opacity: 1,\n        duration: 1,\n      });\n    } else {\n      // GSAP animation for \"not active\" state\n      gsap.to(elementRef.current, {\n        opacity: 0,\n        duration: 1,\n      });\n    }\n  }, [isActive])\n\n\n\n\n\n  // if (isExiting) {\n  //   console.log('gsap active')\n\n  //   // var tl = gsap.timeline(),\n  //   //   mySplitText = new SplitText(header, { type: \"chars\" }),\n  //   //   chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  //   tl.from(chars, {\n  //     duration: 0.8,\n  //     opacity: 0,\n  //     y: 200,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.1\n  //   });\n\n\n  // }\n\n\n\n  return (\n\n    <div className='header-container'>\n      <h1 className='header'>\n        {/* <SwitchTransition>\n          <Transition key={location.pathname}\n            timeout={500}\n            onEnter={(node) => {\n              gsap.set(node, { autoAlpha: 0, scale: 0.8, xPercent: -100 });\n              gsap\n                .timeline({ paused: true })\n                .to(node, { autoAlpha: 1, xPercent: 0, duration: 0.25 })\n                .to(node, { scale: 1, duration: 0.25 })\n                .play();\n\n              console.log(\"enter \" + headerContent)\n            }}\n            onExit={(node) => {\n              gsap\n                .timeline({ paused: true })\n                .to(node, { scale: 0.8, duration: 0.2 })\n                .to(node, { xPercent: 100, autoAlpha: 0, duration: 0.2 })\n                .play();\n              console.log(\"exit \" + headerContent)\n            }\n\n            }\n          > */}\n        {/* <div ref={el => header = el} ref={elementRef}> */}\n        <div ref={elementRef}>\n          {headerContent}\n        </div>\n        {/* </Transition>\n        </SwitchTransition> */}\n      </h1>\n    </div>\n\n  );\n}\n\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,wBAAwB;AACrE,SACEC,WAAW,QACN,kBAAkB;AACzB;AACA,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9CV,IAAI,CAACW,cAAc,CAACV,SAAS,CAAC;EAC9B,MAAMW,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMc,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMe,UAAU,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,KAAK,IAAI,EAAE;MACrB;MACAT,IAAI,CAACe,EAAE,CAACD,UAAU,CAACE,OAAO,EAAE;QAC1BC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAlB,IAAI,CAACe,EAAE,CAACD,UAAU,CAACE,OAAO,EAAE;QAC1BC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;;EAMd;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAIA,oBAEEH,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bd,OAAA;MAAIa,SAAS,EAAC,QAAQ;MAAAC,QAAA,eA0BpBd,OAAA;QAAKe,GAAG,EAAEP,UAAW;QAAAM,QAAA,EAClBZ;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGV,CAAC;AAAAf,EAAA,CA9IKH,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAgJZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}