{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/transitionTrigger.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition, CSSTransition } from 'react-transition-group';\nimport { useLocation } from \"react-router-dom\";\n//transitions\nimport { HomeTransitionEnter, HomeTransitionExit } from './home/homeTransition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransitionTrigger = ({\n  page,\n  children\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  const location = useLocation();\n  //const header = children[0].children[0].children[0];\n  //const [isActive, setIsActive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(SwitchTransition, {\n    children: /*#__PURE__*/_jsxDEV(Transition, {\n      timeout: () => {\n        if (page === \"home\") {\n          console.log('timeout: 1600');\n          return 1600;\n        } else if (page === \"about\") {\n          console.log('timeout: 800');\n          return 800;\n        } else if (page === \"showcase\") {\n          console.log('timeout: 800');\n          return 800;\n        } else {\n          console.log('timeout: 500');\n          return 500;\n        }\n      },\n      onEnter: node => {\n        // const header = node.querySelectorAll('.header');\n        // console.log(header)\n\n        // const tl = gsap.timeline(),\n        //     mySplitText = new SplitText(header, { type: \"chars\" }),\n        //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n        // tl.from(chars, {\n        //     duration: 0.8,\n        //     opacity: 0,\n        //     y: 200,\n        //     rotationX: 0,\n        //     ease: \"ease\",\n        //     stagger: 0.1\n        // });\n\n        if (page === \"home\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionEnter({\n            node\n          });\n        } else if (page === \"about\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionEnter({\n            node\n          });\n        } else if (page === \"showcase\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionEnter({\n            node\n          });\n        }\n      },\n      onExit: node => {\n        // const header = node.querySelectorAll('.header');\n        // console.log(header)\n\n        // const tl = gsap.timeline(),\n        //     mySplitText = new SplitText(header, { type: \"chars\" }),\n        //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n        // tl.to(chars, {\n        //     duration: 0.8,\n        //     opacity: 0,\n        //     y: -200,\n        //     rotationX: 0,\n        //     ease: \"ease\",\n        //     stagger: 0.1\n        // });\n\n        if (page === \"home\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionExit({\n            node\n          });\n        } else if (page === \"about\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionExit({\n            node\n          });\n        } else if (page === \"showcase\") {\n          console.log(\"trigger:\" + {\n            node\n          });\n          HomeTransitionExit({\n            node\n          });\n        }\n      },\n      children: children\n    }, location.pathname, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(TransitionTrigger, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = TransitionTrigger;\nexport default TransitionTrigger;\nvar _c;\n$RefreshReg$(_c, \"TransitionTrigger\");","map":{"version":3,"names":["React","useState","gsap","SplitText","SwitchTransition","Transition","CSSTransition","useLocation","HomeTransitionEnter","HomeTransitionExit","jsxDEV","_jsxDEV","TransitionTrigger","page","children","_s","registerPlugin","location","timeout","console","log","onEnter","node","onExit","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/transitionTrigger.js"],"sourcesContent":["import { React, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition, CSSTransition } from 'react-transition-group';\nimport { useLocation } from \"react-router-dom\"\n//transitions\nimport { HomeTransitionEnter, HomeTransitionExit } from './home/homeTransition';\n\nconst TransitionTrigger = ({ page, children }) => {\n    gsap.registerPlugin(SplitText);\n    const location = useLocation();\n    //const header = children[0].children[0].children[0];\n    //const [isActive, setIsActive] = useState(false);\n    return (\n        <SwitchTransition>\n            <Transition\n                key={location.pathname}\n                timeout={() => {\n                    if (page === \"home\") {\n                        console.log('timeout: 1600')\n                        return 1600;\n                    } else if (page === \"about\") {\n                        console.log('timeout: 800')\n                        return 800;\n\n                    }\n                    else if (page === \"showcase\") {\n                        console.log('timeout: 800')\n                        return 800;\n                    }\n                    else {\n                        console.log('timeout: 500')\n                        return 500;\n                    }\n                }}\n                onEnter={(node) => {\n                    // const header = node.querySelectorAll('.header');\n                    // console.log(header)\n\n                    // const tl = gsap.timeline(),\n                    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n                    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n                    // tl.from(chars, {\n                    //     duration: 0.8,\n                    //     opacity: 0,\n                    //     y: 200,\n                    //     rotationX: 0,\n                    //     ease: \"ease\",\n                    //     stagger: 0.1\n                    // });\n\n                    if (page === \"home\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionEnter({ node });\n                    }\n                    else if (page === \"about\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionEnter({ node });\n                    }\n                    else if (page === \"showcase\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionEnter({ node });\n                    }\n\n                }}\n                onExit={(node) => {\n                    // const header = node.querySelectorAll('.header');\n                    // console.log(header)\n\n                    // const tl = gsap.timeline(),\n                    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n                    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n                    // tl.to(chars, {\n                    //     duration: 0.8,\n                    //     opacity: 0,\n                    //     y: -200,\n                    //     rotationX: 0,\n                    //     ease: \"ease\",\n                    //     stagger: 0.1\n                    // });\n\n                    if (page === \"home\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionExit({ node });\n                    }\n                    else if (page === \"about\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionExit({ node });\n                    }\n                    else if (page === \"showcase\") {\n                        console.log(\"trigger:\" + { node });\n                        HomeTransitionExit({ node });\n                    }\n                }}\n            >\n                {children}\n            </Transition>\n        </SwitchTransition>\n    );\n}\n\nexport default TransitionTrigger;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}