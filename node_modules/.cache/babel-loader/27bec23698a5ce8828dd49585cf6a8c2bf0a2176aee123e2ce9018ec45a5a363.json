{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/transitionTrigger.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition, CSSTransition } from 'react-transition-group';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransitionTrigger = ({\n  children\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  const location = useLocation();\n  //const header = children[0].children[0].children[0];\n  //const [isActive, setIsActive] = useState(false);\n  return (\n    /*#__PURE__*/\n    // <SwitchTransition>\n    //     <Transition key={location.pathname}\n    //         timeout={3000}\n    //         onEnter={() => {\n    //             console.log('enter', \"isActive\" + isActive)\n    //             setIsActive((prevIsActive) => !prevIsActive)\n    //         }}\n    //         onExit={() => {\n    //             console.log('exit', \"isActive\" + isActive)\n    //             setIsActive((prevIsActive) => !prevIsActive)\n    //         }}>\n    //         {children}\n    //     </Transition>\n    // </SwitchTransition >\n    _jsxDEV(SwitchTransition, {\n      children: /*#__PURE__*/_jsxDEV(Transition, {\n        timeout: 1600,\n        onEnter: node => {\n          const header = node.querySelectorAll('.header');\n          console.log(header);\n          const tl = gsap.timeline(),\n            mySplitText = new SplitText(header, {\n              type: \"chars\"\n            }),\n            chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n          tl.from(chars, {\n            duration: 0.8,\n            opacity: 0,\n            y: 200,\n            rotationX: 0,\n            ease: \"ease\",\n            stagger: 0.1\n          });\n          // gsap.set(node, { autoAlpha: 0, scale: 0.8, xPercent: -100 });\n          // gsap\n          //     .timeline({ paused: true })\n          //     .to(node, { autoAlpha: 1, xPercent: 0, duration: 0.25 })\n          //     .to(node, { scale: 1, duration: 0.25 })\n          //     .play();\n        },\n\n        onExit: node => {\n          const header = node.querySelectorAll('.header');\n          console.log(header);\n          const tl = gsap.timeline(),\n            mySplitText = new SplitText(header, {\n              type: \"chars\"\n            }),\n            chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n          tl.to(chars, {\n            duration: 0.8,\n            opacity: 0,\n            y: -200,\n            rotationX: 0,\n            ease: \"ease\",\n            stagger: 0.1\n          });\n        },\n        children: children\n      }, location.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(TransitionTrigger, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = TransitionTrigger;\nexport default TransitionTrigger;\nvar _c;\n$RefreshReg$(_c, \"TransitionTrigger\");","map":{"version":3,"names":["React","useState","gsap","SplitText","SwitchTransition","Transition","CSSTransition","useLocation","jsxDEV","_jsxDEV","TransitionTrigger","children","_s","registerPlugin","location","timeout","onEnter","node","header","querySelectorAll","console","log","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","rotationX","ease","stagger","onExit","to","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/transitionTrigger.js"],"sourcesContent":["import { React, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition, CSSTransition } from 'react-transition-group';\nimport { useLocation } from \"react-router-dom\"\n\nconst TransitionTrigger = ({ children }) => {\n    gsap.registerPlugin(SplitText);\n    const location = useLocation();\n    //const header = children[0].children[0].children[0];\n    //const [isActive, setIsActive] = useState(false);\n    return (\n        // <SwitchTransition>\n        //     <Transition key={location.pathname}\n        //         timeout={3000}\n        //         onEnter={() => {\n        //             console.log('enter', \"isActive\" + isActive)\n        //             setIsActive((prevIsActive) => !prevIsActive)\n\n        //         }}\n        //         onExit={() => {\n        //             console.log('exit', \"isActive\" + isActive)\n        //             setIsActive((prevIsActive) => !prevIsActive)\n        //         }}>\n        //         {children}\n        //     </Transition>\n        // </SwitchTransition >\n\n        <SwitchTransition>\n            <Transition\n                key={location.pathname}\n                timeout={1600}\n                onEnter={(node) => {\n                    const header = node.querySelectorAll('.header');\n                    console.log(header)\n\n                    const tl = gsap.timeline(),\n                        mySplitText = new SplitText(header, { type: \"chars\" }),\n                        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n                    tl.from(chars, {\n                        duration: 0.8,\n                        opacity: 0,\n                        y: 200,\n                        rotationX: 0,\n                        ease: \"ease\",\n                        stagger: 0.1\n                    });\n                    // gsap.set(node, { autoAlpha: 0, scale: 0.8, xPercent: -100 });\n                    // gsap\n                    //     .timeline({ paused: true })\n                    //     .to(node, { autoAlpha: 1, xPercent: 0, duration: 0.25 })\n                    //     .to(node, { scale: 1, duration: 0.25 })\n                    //     .play();\n\n\n\n                }}\n                onExit={(node) => {\n                    const header = node.querySelectorAll('.header');\n                    console.log(header)\n\n                    const tl = gsap.timeline(),\n                        mySplitText = new SplitText(header, { type: \"chars\" }),\n                        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n                    tl.to(chars, {\n                        duration: 0.8,\n                        opacity: 0,\n                        y: -200,\n                        rotationX: 0,\n                        ease: \"ease\",\n                        stagger: 0.1\n                    });\n                }}\n            >\n                {children}\n            </Transition>\n        </SwitchTransition>\n    );\n}\n\nexport default TransitionTrigger;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,gBAAgB,EAAEC,UAAU,EAAEC,aAAa,QAAQ,wBAAwB;AACpF,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxCV,IAAI,CAACW,cAAc,CAACV,SAAS,CAAC;EAC9B,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B;EACA;EACA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAE,OAAA,CAACL,gBAAgB;MAAAO,QAAA,eACbF,OAAA,CAACJ,UAAU;QAEPU,OAAO,EAAE,IAAK;QACdC,OAAO,EAAGC,IAAI,IAAK;UACf,MAAMC,MAAM,GAAGD,IAAI,CAACE,gBAAgB,CAAC,SAAS,CAAC;UAC/CC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;UAEnB,MAAMI,EAAE,GAAGpB,IAAI,CAACqB,QAAQ,CAAC,CAAC;YACtBC,WAAW,GAAG,IAAIrB,SAAS,CAACe,MAAM,EAAE;cAAEO,IAAI,EAAE;YAAQ,CAAC,CAAC;YACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;UAE/BJ,EAAE,CAACK,IAAI,CAACD,KAAK,EAAE;YACXE,QAAQ,EAAE,GAAG;YACbC,OAAO,EAAE,CAAC;YACVC,CAAC,EAAE,GAAG;YACNC,SAAS,EAAE,CAAC;YACZC,IAAI,EAAE,MAAM;YACZC,OAAO,EAAE;UACb,CAAC,CAAC;UACF;UACA;UACA;UACA;UACA;UACA;QAIJ,CAAE;;QACFC,MAAM,EAAGjB,IAAI,IAAK;UACd,MAAMC,MAAM,GAAGD,IAAI,CAACE,gBAAgB,CAAC,SAAS,CAAC;UAC/CC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;UAEnB,MAAMI,EAAE,GAAGpB,IAAI,CAACqB,QAAQ,CAAC,CAAC;YACtBC,WAAW,GAAG,IAAIrB,SAAS,CAACe,MAAM,EAAE;cAAEO,IAAI,EAAE;YAAQ,CAAC,CAAC;YACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;UAE/BJ,EAAE,CAACa,EAAE,CAACT,KAAK,EAAE;YACTE,QAAQ,EAAE,GAAG;YACbC,OAAO,EAAE,CAAC;YACVC,CAAC,EAAE,CAAC,GAAG;YACPC,SAAS,EAAE,CAAC;YACZC,IAAI,EAAE,MAAM;YACZC,OAAO,EAAE;UACb,CAAC,CAAC;QACN,CAAE;QAAAtB,QAAA,EAEDA;MAAQ,GA9CJG,QAAQ,CAACsB,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA+Cd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAE3B,CAAC;AAAA5B,EAAA,CA1EKF,iBAAiB;EAAA,QAEFH,WAAW;AAAA;AAAAkC,EAAA,GAF1B/B,iBAAiB;AA4EvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}