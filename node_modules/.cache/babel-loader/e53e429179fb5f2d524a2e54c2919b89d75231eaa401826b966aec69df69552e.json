{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nconst ShowcaseTransitionEnter = ({\n  node\n}) => {\n  // gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.header');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.from(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: 100,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // });\n};\n_c = ShowcaseTransitionEnter;\nconst ShowcaseTransitionExit = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.showcase-header');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.to(chars, {\n    duration: 0.4,\n    opacity: 0,\n    y: -100,\n    rotationX: 0,\n    ease: \"ease\",\n    stagger: 0.05,\n    onComplete: () => {\n      ScrollTrigger.getById(\"showcaseTrigger\").kill();\n      console.log('triggerkilled');\n    }\n  });\n};\n_c2 = ShowcaseTransitionExit;\nexport { ShowcaseTransitionEnter, ShowcaseTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"ShowcaseTransitionEnter\");\n$RefreshReg$(_c2, \"ShowcaseTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","ScrollTrigger","ShowcaseTransitionEnter","node","_c","ShowcaseTransitionExit","registerPlugin","tl","to","chars","duration","opacity","y","rotationX","ease","stagger","onComplete","getById","kill","console","log","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/showcase/showcaseTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\"; import { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nconst ShowcaseTransitionEnter = ({ node }) => {\n    // gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.header');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.from(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: 100,\n    //     rotationX: 0,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // });\n}\n\nconst ShowcaseTransitionExit = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.showcase-header');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.to(chars, {\n        duration: 0.4,\n        opacity: 0,\n        y: -100,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.05,\n        onComplete: () => {\n            ScrollTrigger.getById(\"showcaseTrigger\").kill();\n            console.log('triggerkilled');\n        }\n    });\n}\n\nexport { ShowcaseTransitionEnter, ShowcaseTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAAE,SAASC,aAAa,QAAQ,oBAAoB;AAE9F,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1C;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAC,EAAA,GAfKF,uBAAuB;AAiB7B,MAAMG,sBAAsB,GAAGA,CAAC;EAAEF;AAAK,CAAC,KAAK;EACzCJ,IAAI,CAACO,cAAc,CAACN,SAAS,CAAC;EAC9B;EACA;EACA;EACA;;EAEAO,EAAE,CAACC,EAAE,CAACC,KAAK,EAAE;IACTC,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,CAAC,GAAG;IACPC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAEA,CAAA,KAAM;MACdf,aAAa,CAACgB,OAAO,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAAC,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAChC;EACJ,CAAC,CAAC;AACN,CAAC;AAAAC,GAAA,GAnBKhB,sBAAsB;AAqB5B,SAASH,uBAAuB,EAAEG,sBAAsB;AAAG,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}