{"ast":null,"code":"import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nconst ShowcaseTransitionEnter = ({\n  node\n}) => {\n  // gsap.registerPlugin(SplitText);\n  // const header = node.querySelectorAll('.header');\n  // const tl = gsap.timeline(),\n  //     mySplitText = new SplitText(header, { type: \"chars\" }),\n  //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  // tl.from(chars, {\n  //     duration: 0.4,\n  //     opacity: 0,\n  //     y: 100,\n  //     rotationX: 0,\n  //     ease: \"ease\",\n  //     stagger: 0.05\n  // });\n};\n_c = ShowcaseTransitionEnter;\nconst ShowcaseTransitionExit = ({\n  node\n}) => {\n  gsap.registerPlugin(SplitText);\n  const header = node.querySelectorAll('.header');\n  const tl = gsap.timeline(),\n    mySplitText = new SplitText(header, {\n      type: \"chars\"\n    }),\n    chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n  tl.to(chars, {\n    duration: 0.4,\n    opacity: 0,\n    y: -100,\n    rotationX: 0,\n    ease: \"ease\",\n    stagger: 0.05\n  });\n  ScrollTrigger.getAll().forEach(t => t.kill());\n};\n_c2 = ShowcaseTransitionExit;\nexport { ShowcaseTransitionEnter, ShowcaseTransitionExit };\nvar _c, _c2;\n$RefreshReg$(_c, \"ShowcaseTransitionEnter\");\n$RefreshReg$(_c2, \"ShowcaseTransitionExit\");","map":{"version":3,"names":["gsap","SplitText","ShowcaseTransitionEnter","node","_c","ShowcaseTransitionExit","registerPlugin","header","querySelectorAll","tl","timeline","mySplitText","type","chars","to","duration","opacity","y","rotationX","ease","stagger","ScrollTrigger","getAll","forEach","t","kill","_c2","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/pages/showcase/showcaseTransition.js"],"sourcesContent":["import { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\n\nconst ShowcaseTransitionEnter = ({ node }) => {\n    // gsap.registerPlugin(SplitText);\n    // const header = node.querySelectorAll('.header');\n    // const tl = gsap.timeline(),\n    //     mySplitText = new SplitText(header, { type: \"chars\" }),\n    //     chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    // tl.from(chars, {\n    //     duration: 0.4,\n    //     opacity: 0,\n    //     y: 100,\n    //     rotationX: 0,\n    //     ease: \"ease\",\n    //     stagger: 0.05\n    // });\n}\n\nconst ShowcaseTransitionExit = ({ node }) => {\n    gsap.registerPlugin(SplitText);\n    const header = node.querySelectorAll('.header');\n    const tl = gsap.timeline(),\n        mySplitText = new SplitText(header, { type: \"chars\" }),\n        chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.to(chars, {\n        duration: 0.4,\n        opacity: 0,\n        y: -100,\n        rotationX: 0,\n        ease: \"ease\",\n        stagger: 0.05\n    });\n    ScrollTrigger.getAll().forEach(t => t.kill());\n}\n\nexport { ShowcaseTransitionEnter, ShowcaseTransitionExit };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1C;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAC,EAAA,GAfKF,uBAAuB;AAiB7B,MAAMG,sBAAsB,GAAGA,CAAC;EAAEF;AAAK,CAAC,KAAK;EACzCH,IAAI,CAACM,cAAc,CAACL,SAAS,CAAC;EAC9B,MAAMM,MAAM,GAAGJ,IAAI,CAACK,gBAAgB,CAAC,SAAS,CAAC;EAC/C,MAAMC,EAAE,GAAGT,IAAI,CAACU,QAAQ,CAAC,CAAC;IACtBC,WAAW,GAAG,IAAIV,SAAS,CAACM,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAQ,CAAC,CAAC;IACtDC,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC,CAAC;;EAE/BJ,EAAE,CAACK,EAAE,CAACD,KAAK,EAAE;IACTE,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,CAAC,EAAE,CAAC,GAAG;IACPC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,aAAa,CAACC,MAAM,CAAC,CAAC,CAACC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AACjD,CAAC;AAAAC,GAAA,GAhBKrB,sBAAsB;AAkB5B,SAASH,uBAAuB,EAAEG,sBAAsB;AAAG,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}