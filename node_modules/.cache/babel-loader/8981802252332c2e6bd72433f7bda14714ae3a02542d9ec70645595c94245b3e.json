{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/location.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { gsap } from 'gsap';\n//styles\nimport '../styles/location.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Location = () => {\n  _s();\n  //state\n  const [currentTime, setCurrentTime] = useState('');\n  useEffect(() => {\n    const updateTime = () => {\n      const now = new Date();\n      let hours = now.getHours();\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n\n      // Convert hours to 12-hour format\n      hours = hours % 12 || 12;\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const formattedTime = `${hours}:${minutes} ${ampm}`;\n      setCurrentTime(formattedTime);\n    };\n\n    // Update the time initially\n    updateTime();\n\n    // Update the time every minute (60,000 milliseconds)\n    const intervalId = setInterval(updateTime, 60000);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"location-text\",\n      children: [\"SF Bay Area, \", currentTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Location, \"k0ffgPJ2sZXf+hI6VMRnlXj8X/8=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","gsap","jsxDEV","_jsxDEV","Location","_s","currentTime","setCurrentTime","updateTime","now","Date","hours","getHours","ampm","minutes","getMinutes","toString","padStart","formattedTime","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/location.react.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { gsap } from 'gsap';\n//styles\nimport '../styles/location.css';\n\nconst Location = () => {\n    //state\n    const [currentTime, setCurrentTime] = useState('');\n\n    useEffect(() => {\n        const updateTime = () => {\n            const now = new Date();\n            let hours = now.getHours();\n            const ampm = hours >= 12 ? 'PM' : 'AM';\n\n            // Convert hours to 12-hour format\n            hours = hours % 12 || 12;\n\n            const minutes = now.getMinutes().toString().padStart(2, '0');\n            const formattedTime = `${hours}:${minutes} ${ampm}`;\n            setCurrentTime(formattedTime);\n        };\n\n        // Update the time initially\n        updateTime();\n\n        // Update the time every minute (60,000 milliseconds)\n        const intervalId = setInterval(updateTime, 60000);\n\n        // Clear the interval on component unmount\n        return () => clearInterval(intervalId);\n    }, []);\n\n\n\n    return (\n        <div className='location'>\n            <div className='location-icon' />\n            <p className='location-text'>\n                SF Bay Area, {currentTime}\n            </p>\n        </div>\n\n    );\n}\n\nexport default Location;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACnE,SAASC,IAAI,QAAQ,MAAM;AAC3B;AACA,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDF,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,IAAIC,KAAK,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;MAC1B,MAAMC,IAAI,GAAGF,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;;MAEtC;MACAA,KAAK,GAAGA,KAAK,GAAG,EAAE,IAAI,EAAE;MAExB,MAAMG,OAAO,GAAGL,GAAG,CAACM,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,MAAMC,aAAa,GAAI,GAAEP,KAAM,IAAGG,OAAQ,IAAGD,IAAK,EAAC;MACnDN,cAAc,CAACW,aAAa,CAAC;IACjC,CAAC;;IAED;IACAV,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMW,UAAU,GAAGC,WAAW,CAACZ,UAAU,EAAE,KAAK,CAAC;;IAEjD;IACA,OAAO,MAAMa,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBpB,OAAA;MAAKmB,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCxB,OAAA;MAAGmB,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,eACZ,EAACjB,WAAW;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGd,CAAC;AAAAtB,EAAA,CAvCKD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}