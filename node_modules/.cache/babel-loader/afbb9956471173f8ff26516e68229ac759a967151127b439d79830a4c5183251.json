{"ast":null,"code":"var _jsxFileName = \"/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  headerContent\n}) => {\n  _s();\n  gsap.registerPlugin(SplitText);\n  let header = useRef(null);\n  let animationNode = useRef(null);\n  useEffect(() => {\n    var tl = gsap.timeline(),\n      mySplitText = new SplitText(header, {\n        type: \"chars\"\n      }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n      duration: 0.8,\n      opacity: 0,\n      y: 200,\n      rotationX: 0,\n      ease: \"ease\",\n      stagger: 0.1\n    });\n  }, [header]);\n  const animateIn = node => {\n    gsap.from(node, {\n      opacity: 0,\n      y: -20,\n      duration: 0.3\n    });\n  };\n  const animateOut = (node, done) => {\n    gsap.to(node, {\n      opacity: 0,\n      y: -20,\n      duration: 0.3,\n      onComplete: done\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => header = el,\n        children: headerContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchTransition, {\n      children: /*#__PURE__*/_jsxDEV(CustomTransition, {\n        timeout: 300,\n        onEnter: animateIn(),\n        onExit: animateOut(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: el => animationNode = el,\n          children: \"This paragraph will animate with GSAP when switching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, \"about-paragraph\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"QI1eBRPG7ABCdkIyC+9a4CAekaw=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitText","SwitchTransition","Transition","jsxDEV","_jsxDEV","Header","headerContent","_s","registerPlugin","header","animationNode","tl","timeline","mySplitText","type","chars","from","duration","opacity","y","rotationX","ease","stagger","animateIn","node","animateOut","done","to","onComplete","className","children","ref","el","fileName","_jsxFileName","lineNumber","columnNumber","CustomTransition","timeout","onEnter","onExit","_c","$RefreshReg$"],"sources":["/Users/jaimecastaneda/Projects/Portfolio/portfolio-web/src/components/header.react.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { SplitText } from \"gsap/SplitText\";\nimport { SwitchTransition, Transition } from \"react-transition-group\";\n//styles\nimport '../styles/header.css';\nimport '../styles/App.css';\n\nconst Header = ({ headerContent }) => {\n  gsap.registerPlugin(SplitText);\n  let header = useRef(null);\n\n  let animationNode = useRef(null);\n\n  useEffect(() => {\n\n    var tl = gsap.timeline(),\n      mySplitText = new SplitText(header, { type: \"chars\" }),\n      chars = mySplitText.chars; //an array of all the divs that wrap each character\n\n    tl.from(chars, {\n      duration: 0.8,\n      opacity: 0,\n      y: 200,\n      rotationX: 0,\n      ease: \"ease\",\n      stagger: 0.1\n    });\n\n  }, [header])\n\n  const animateIn = (node) => {\n    gsap.from(node, { opacity: 0, y: -20, duration: 0.3 });\n  };\n\n  const animateOut = (node, done) => {\n    gsap.to(node, { opacity: 0, y: -20, duration: 0.3, onComplete: done });\n  };\n\n\n  return (\n\n    <div className='header-container'>\n      <h1 className='header'>\n        <div ref={el => header = el}>\n          {headerContent}\n        </div>\n      </h1>\n\n      <SwitchTransition>\n        <CustomTransition key=\"about-paragraph\" timeout={300} onEnter={animateIn()} onExit={animateOut()}>\n          <p ref={el => animationNode = el}>This paragraph will animate with GSAP when switching.</p>\n        </CustomTransition>\n      </SwitchTransition>\n    </div>\n\n  );\n}\n\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}